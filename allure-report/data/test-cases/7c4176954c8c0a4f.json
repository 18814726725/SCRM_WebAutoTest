{
  "uid" : "7c4176954c8c0a4f",
  "name" : "test_login_wrongpawwsd[data0]",
  "fullName" : "web_autotestcase.test_0_login.TestLogin#test_login_wrongpawwsd[data0]",
  "historyId" : "3c08fb94ca0927a81b8fcdf7ad249282",
  "time" : {
    "start" : 1589607417602,
    "stop" : 1589607417602,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 78",
  "statusTrace" : "@pytest.fixture   # 声明他之下的函数是一个pytest的前置、后置条件\n    def init_driver():\n        # 定义前置\n>       driver = webdriver.Chrome()\n\nweb_autotestcase\\conftest.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:81: in __init__\n    desired_capabilities=desired_capabilities)\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000000033B49B0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...x767A344D+18]\\\\n\\\\tRtlInitializeExceptionChain [0x77159802+99]\\\\n\\\\tRtlInitializeExceptionChain [0x771597D5+54]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 78\n\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "init_driver",
    "time" : {
      "start" : 1589607417605,
      "stop" : 1589607422494,
      "duration" : 4889
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 78\n\n",
    "statusTrace" : "  File \"D:\\Python\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\Python\\lib\\site-packages\\_pytest\\fixtures.py\", line 923, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\Python\\lib\\site-packages\\_pytest\\fixtures.py\", line 779, in call_fixture_func\n    res = next(it)\n  File \"D:\\pytest_web_autotest\\web_autotestcase\\conftest.py\", line 25, in init_driver\n    driver = webdriver.Chrome()\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 81, in __init__\n    desired_capabilities=desired_capabilities)\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 157, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 252, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "web_autotestcase"
  }, {
    "name" : "suite",
    "value" : "test_0_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "ZD-20151030HOQR"
  }, {
    "name" : "thread",
    "value" : "12196-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "web_autotestcase.test_0_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'username': '18684720553', 'passwd': 'python4852', 'check': '帐号或密码错误!'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "a7f67125e91a00e8",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 78",
      "time" : {
        "start" : 1588944607639,
        "stop" : 1588944607639,
        "duration" : 0
      }
    }, {
      "uid" : "5d7a2e9060f03f2c",
      "status" : "passed",
      "time" : {
        "start" : 1566119934798,
        "stop" : 1566119941231,
        "duration" : 6433
      }
    }, {
      "uid" : "7831748fb7bd641e",
      "status" : "passed",
      "time" : {
        "start" : 1566115256720,
        "stop" : 1566115263199,
        "duration" : 6479
      }
    }, {
      "uid" : "5b1cea19b4bdb632",
      "status" : "passed",
      "time" : {
        "start" : 1566115000025,
        "stop" : 1566115005981,
        "duration" : 5956
      }
    }, {
      "uid" : "b82e4e105fa8b2ec",
      "status" : "passed",
      "time" : {
        "start" : 1566106478899,
        "stop" : 1566106485117,
        "duration" : 6218
      }
    }, {
      "uid" : "bd5e48b56115d666",
      "status" : "passed",
      "time" : {
        "start" : 1566106138883,
        "stop" : 1566106144532,
        "duration" : 5649
      }
    }, {
      "uid" : "fb6a5433daf02d6c",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home",
      "time" : {
        "start" : 1566045207968,
        "stop" : 1566045207968,
        "duration" : 0
      }
    }, {
      "uid" : "bb4ac4d3af7fdf63",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home",
      "time" : {
        "start" : 1566045064891,
        "stop" : 1566045064891,
        "duration" : 0
      }
    }, {
      "uid" : "48281e84832a2155",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary\n  (Driver info: chromedriver=70.0.3538.97 (d035916fe243477005bc95fe2a5778b8f20b6ae1),platform=Windows NT 6.1.7601 SP1 x86_64)",
      "time" : {
        "start" : 1566044007120,
        "stop" : 1566044007120,
        "duration" : 0
      }
    }, {
      "uid" : "902aa4fd1c330270",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary\n  (Driver info: chromedriver=70.0.3538.97 (d035916fe243477005bc95fe2a5778b8f20b6ae1),platform=Windows NT 6.1.7601 SP1 x86_64)",
      "time" : {
        "start" : 1566036329671,
        "stop" : 1566036329671,
        "duration" : 0
      }
    }, {
      "uid" : "51953119b8e49371",
      "status" : "passed",
      "time" : {
        "start" : 1566035728960,
        "stop" : 1566035731103,
        "duration" : 2143
      }
    }, {
      "uid" : "891335348a987fb2",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary\n  (Driver info: chromedriver=70.0.3538.97 (d035916fe243477005bc95fe2a5778b8f20b6ae1),platform=Windows NT 6.1.7601 SP1 x86_64)",
      "time" : {
        "start" : 1566035375653,
        "stop" : 1566035375653,
        "duration" : 0
      }
    }, {
      "uid" : "9d5b04c2407e06c0",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary\n  (Driver info: chromedriver=70.0.3538.97 (d035916fe243477005bc95fe2a5778b8f20b6ae1),platform=Windows NT 6.1.7601 SP1 x86_64)",
      "time" : {
        "start" : 1566035039222,
        "stop" : 1566035039222,
        "duration" : 0
      }
    }, {
      "uid" : "67190222b5c972cf",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary\n  (Driver info: chromedriver=70.0.3538.97 (d035916fe243477005bc95fe2a5778b8f20b6ae1),platform=Windows NT 6.1.7601 SP1 x86_64)",
      "time" : {
        "start" : 1566034992629,
        "stop" : 1566034992629,
        "duration" : 0
      }
    }, {
      "uid" : "f3290642e2c0c777",
      "status" : "passed",
      "time" : {
        "start" : 1566031612544,
        "stop" : 1566031614212,
        "duration" : 1668
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 13,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 20
      },
      "items" : [ {
        "uid" : "339bffccd4d7592c",
        "reportUrl" : "http://172.25.40.46:8080/job/web_autotest/27/allure/#testresult/339bffccd4d7592c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 78",
        "time" : {
          "start" : 1588944607639,
          "stop" : 1588944607639,
          "duration" : 0
        }
      }, {
        "uid" : "1284fc7622cc91b3",
        "reportUrl" : "http://172.25.40.46:8080/job/web_autotest/26/allure/#testresult/1284fc7622cc91b3",
        "status" : "passed",
        "time" : {
          "start" : 1566119934798,
          "stop" : 1566119941231,
          "duration" : 6433
        }
      }, {
        "uid" : "4cdb297eae65987b",
        "reportUrl" : "http://172.25.40.46:8080/job/web_autotest/25/allure/#testresult/4cdb297eae65987b",
        "status" : "passed",
        "time" : {
          "start" : 1566115256720,
          "stop" : 1566115263199,
          "duration" : 6479
        }
      }, {
        "uid" : "7a25ac8249c21641",
        "reportUrl" : "http://172.25.40.46:8080/job/web_autotest/24/allure/#testresult/7a25ac8249c21641",
        "status" : "passed",
        "time" : {
          "start" : 1566115000025,
          "stop" : 1566115005981,
          "duration" : 5956
        }
      }, {
        "uid" : "e95522b3b6085aa6",
        "reportUrl" : "http://172.25.40.46:8080/job/web_autotest/23/allure/#testresult/e95522b3b6085aa6",
        "status" : "passed",
        "time" : {
          "start" : 1566106478899,
          "stop" : 1566106485117,
          "duration" : 6218
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7c4176954c8c0a4f.json",
  "parameterValues" : [ "{'username': '18684720553', 'passwd': 'python4852', 'check': '帐号或密码错误!'}" ]
}