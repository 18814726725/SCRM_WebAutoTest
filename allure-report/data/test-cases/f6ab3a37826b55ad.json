{
  "uid" : "f6ab3a37826b55ad",
  "name" : "test_invest_sucess",
  "fullName" : "web_autotestcase.test_1_invest.TestInvest#test_invest_sucess",
  "historyId" : "7fb3fa9ca2d3a385100a7281da38291d",
  "time" : {
    "start" : 1566120019266,
    "stop" : 1566120055727,
    "duration" : 36461
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <web_autotestcase.test_1_invest.TestInvest object at 0x00000000033AF240>\ninit = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"df67d020afa306977f70a4f6f5d9ab23\")>, <web_pageobject.bid_page.BidPage object at 0x00000000033C4E80>)\n\n    def test_invest_sucess(self,init):\n        logging.info(\"--------投资操作：正常场景-投资成功---------\")\n        # 标页面：获取投资前的用户金额\n        user_balance_before = init[1].uaser_available()\n        # 标页面：投资操作\n        init[1].invest(id.success['money'])\n        # 标页面：在投资成功的窗口中—点击查看并激活\n>       init[1].view_and_activate_button_clcik()\n\nweb_autotestcase\\test_1_invest.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nweb_pageobject\\bid_page.py:24: in view_and_activate_button_clcik\n    BasePage(self.driver).click_ele(tpl.view_and_activate_button_loc, '投资成功页面-点击【查看并激活】按钮')\nweb_pageobject\\basepage.py:70: in click_ele\n    self.wait_ele_visiable(loc,img_desc,timeout=30,frequency=0.5)\nweb_pageobject\\basepage.py:29: in wait_ele_visiable\n    WebDriverWait(self.driver, timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"df67d020afa306977f70a4f6f5d9ab23\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000000033CD240>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "init",
    "time" : {
      "start" : 1566119969891,
      "stop" : 1566120019264,
      "duration" : 49373
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login_web",
    "time" : {
      "start" : 1566119963613,
      "stop" : 1566119969891,
      "duration" : 6278
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_driver",
    "time" : {
      "start" : 1566119957939,
      "stop" : 1566119963612,
      "duration" : 5673
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <web_autotestcase.test_1_invest.TestInvest object at 0x00000000033AF240>\ninit = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"df67d020afa306977f70a4f6f5d9ab23\")>, <web_pageobject.bid_page.BidPage object at 0x00000000033C4E80>)\n\n    def test_invest_sucess(self,init):\n        logging.info(\"--------投资操作：正常场景-投资成功---------\")\n        # 标页面：获取投资前的用户金额\n        user_balance_before = init[1].uaser_available()\n        # 标页面：投资操作\n        init[1].invest(id.success['money'])\n        # 标页面：在投资成功的窗口中—点击查看并激活\n>       init[1].view_and_activate_button_clcik()\n\nweb_autotestcase\\test_1_invest.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nweb_pageobject\\bid_page.py:24: in view_and_activate_button_clcik\n    BasePage(self.driver).click_ele(tpl.view_and_activate_button_loc, '投资成功页面-点击【查看并激活】按钮')\nweb_pageobject\\basepage.py:70: in click_ele\n    self.wait_ele_visiable(loc,img_desc,timeout=30,frequency=0.5)\nweb_pageobject\\basepage.py:29: in wait_ele_visiable\n    WebDriverWait(self.driver, timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"df67d020afa306977f70a4f6f5d9ab23\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000000033CD240>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ebf39ae3ba1c4453",
      "name" : "log",
      "source" : "ebf39ae3ba1c4453.txt",
      "type" : "text/plain",
      "size" : 5640
    }, {
      "uid" : "1743b0b3e4181935",
      "name" : "stdout",
      "source" : "1743b0b3e4181935.txt",
      "type" : "text/plain",
      "size" : 20
    }, {
      "uid" : "5debb5ec5e9be089",
      "name" : "stderr",
      "source" : "5debb5ec5e9be089.txt",
      "type" : "text/plain",
      "size" : 7758
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "init::0",
    "time" : {
      "start" : 1566120055980,
      "stop" : 1566120055981,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "login_web::0",
    "time" : {
      "start" : 1566120055996,
      "stop" : 1566120055996,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_driver::0",
    "time" : {
      "start" : 1566120055997,
      "stop" : 1566120058179,
      "duration" : 2182
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "web_autotestcase"
  }, {
    "name" : "suite",
    "value" : "test_1_invest"
  }, {
    "name" : "subSuite",
    "value" : "TestInvest"
  }, {
    "name" : "host",
    "value" : "ZD-20151030HOQR"
  }, {
    "name" : "thread",
    "value" : "25964-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "web_autotestcase.test_1_invest"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f6ab3a37826b55ad.json",
  "parameterValues" : [ ]
}